// <auto-generated />
using System;
using AgrotutorAPI.Data.Postgresql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AgrotutorAPI.Data.Postgresql.Migrations
{
    [DbContext(typeof(AgrotutorContext))]
    [Migration("20201119071928_AddedMobileId")]
    partial class AddedMobileId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AgrotutorAPI.Domain.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActivityType")
                        .HasColumnType("integer");

                    b.Property<string>("AmountApplied")
                        .HasColumnType("text");

                    b.Property<string>("AmountSold")
                        .HasColumnType("text");

                    b.Property<string>("AppliedProduct")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<double>("Cost")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<double>("Dose")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("NumberOfSeeds")
                        .HasColumnType("double precision");

                    b.Property<string>("ParcelId")
                        .HasColumnType("text");

                    b.Property<int?>("PlotArea")
                        .HasColumnType("integer");

                    b.Property<int>("PlotId")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("ProductObtained")
                        .HasColumnType("text");

                    b.Property<int?>("SellingPrice")
                        .HasColumnType("integer");

                    b.Property<string>("Sown")
                        .HasColumnType("text");

                    b.Property<double>("WeightOfSeeds")
                        .HasColumnType("double precision");

                    b.Property<string>("Yield")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.DelineationPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PlotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.ToTable("Delineations");
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.MediaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int?>("PlotId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlotId");

                    b.ToTable("MediaItem");
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.Plot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ClimateType")
                        .HasColumnType("integer");

                    b.Property<int>("CropType")
                        .HasColumnType("integer");

                    b.Property<string>("DeviceID")
                        .HasColumnType("text");

                    b.Property<bool>("Irrigated")
                        .HasColumnType("boolean");

                    b.Property<int>("MaturityType")
                        .HasColumnType("integer");

                    b.Property<int>("MobileId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.Activity", b =>
                {
                    b.HasOne("AgrotutorAPI.Domain.Plot", "Plot")
                        .WithMany("Activities")
                        .HasForeignKey("PlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.DelineationPosition", b =>
                {
                    b.HasOne("AgrotutorAPI.Domain.Plot", null)
                        .WithMany("Delineation")
                        .HasForeignKey("PlotId");

                    b.OwnsOne("AgrotutorAPI.Domain.Position", "Position", b1 =>
                        {
                            b1.Property<int>("DelineationPositionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<double?>("Accuracy")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Altitude")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Course")
                                .HasColumnType("double precision");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Speed")
                                .HasColumnType("double precision");

                            b1.Property<DateTimeOffset>("Timestamp")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("DelineationPositionId");

                            b1.ToTable("Delineations");

                            b1.WithOwner()
                                .HasForeignKey("DelineationPositionId");
                        });
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.MediaItem", b =>
                {
                    b.HasOne("AgrotutorAPI.Domain.Plot", null)
                        .WithMany("MediaItems")
                        .HasForeignKey("PlotId");
                });

            modelBuilder.Entity("AgrotutorAPI.Domain.Plot", b =>
                {
                    b.OwnsOne("AgrotutorAPI.Domain.Position", "Position", b1 =>
                        {
                            b1.Property<int>("PlotId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer")
                                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                            b1.Property<double?>("Accuracy")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Altitude")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Course")
                                .HasColumnType("double precision");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double precision");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double precision");

                            b1.Property<double?>("Speed")
                                .HasColumnType("double precision");

                            b1.Property<DateTimeOffset>("Timestamp")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("PlotId");

                            b1.ToTable("Plots");

                            b1.WithOwner()
                                .HasForeignKey("PlotId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
